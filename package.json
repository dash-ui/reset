{
  "name": "@-ui/reset",
  "version": "1.1.0",
  "homepage": "https://github.com/dash-ui/reset#readme",
  "repository": "github:dash-ui/reset",
  "bugs": "https://github.com/dash-ui/reset/issues",
  "license": "MIT",
  "description": "A modern browser reset for dash-ui",
  "keywords": [
    "reset css",
    "reset browser css"
  ],
  "main": "dist/main/index.js",
  "module": "dist/module/index.js",
  "types": "types/index.d.ts",
  "files": [
    "/dist",
    "/types"
  ],
  "sideEffects": false,
  "scripts": {
    "build": "npm run build-main && npm run build-module && npm run build-types",
    "build-main": "npm run compile -- -d dist/main --env-name main",
    "build-module": "npm run compile -- -d dist/module --env-name module",
    "build-types": "tsc -p tsconfig.json -d --outDir types --emitDeclarationOnly",
    "check-types": "tsc --noEmit -p tsconfig.json",
    "compile": "babel src -x .ts --ignore \"**/*.test.ts\",\"**/test.ts\" --delete-dir-on-start",
    "format": "prettier --write \"**/*.{ts,js,md,yml,json,eslintrc,prettierrc}\"",
    "lint": "eslint . --ext .ts",
    "prepublishOnly": "npm run lint && npm run test && npm run build && npm run format",
    "test": "jest",
    "validate": "npm run check-types && npm run lint && npm run test -- --coverage"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run build-types && git add types && lint-staged"
    }
  },
  "lint-staged": {
    "**/*.{ts,js}": [
      "eslint",
      "prettier --write"
    ],
    "**/*.{md,yml,json}": [
      "prettier --write"
    ]
  },
  "devDependencies": {
    "@lunde/babel-preset-es": "latest",
    "@types/jest": "latest",
    "@typescript-eslint/eslint-plugin": "latest",
    "@typescript-eslint/parser": "latest",
    "eslint": "latest",
    "eslint-import-resolver-jest": "latest",
    "eslint-plugin-jest": "latest",
    "husky": "latest",
    "jest": "latest",
    "lint-staged": "latest",
    "minify-css.macro": "^1.0.6",
    "prettier": "latest",
    "ts-jest": "latest",
    "typescript": "latest"
  },
  "dependencies": {},
  "peerDependencies": {}
}
